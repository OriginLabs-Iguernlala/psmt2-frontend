
# ====================================
# Variable Definitions & Configuration
# ====================================

# Include autoconf-generated makefile
# Since there is a rule to create/update this makefile, make
# should automatically run it and reload/restart if needed
include autoconf/Makefile.config

# Some more configuration variables for plugins and preludes
pluginsdir = $(libdir)/plugins
preludesdir = $(libdir)/preludes

# Some variables to help with adding
# flags and/or renaming the ocp-build binary
OCP_BUILD=ocp-build
OCP_FLAGS=

# List the files:
# - generated by rules in this makefile,
# - used by the build process
#
# This excludes:
# - .ml files generated by menhir or ocamllex
#   (since they reside in ocp-build specific directory)
# - autoconf files
GENERATED=


# =======
# Aliases
# =======

# IMPORTANT: this is the first rules, and as such the default
# run when "make is called", keep it as the first rule
world: all

# Small alias to re-generate necessary files for the build
gen: $(GENERATED)

# Convenient alias for running all configuration steps
conf: autoconf/Makefile.config

# Alias for generated artifacts
clean: ocp-build-clean generated-clean

# Alias to remove all generated files
distclean: ocp-build-distclean ocp-autoconf-distclean



# ===========
# Build rules
# ===========

# ocp-build requires initialization
# to create its _obuild directory
_obuild:
	$(OCP_BUILD) init

# Alias to build all targets using ocp-build
# Hopefully more efficient than making "all" depend
# on "lib", "bin" and "gui", since ocp-build can
# parralelize more
all: _obuild gen
	$(OCP_BUILD) $(OCP_FLAGS) psmt2-frontend


# ============
# Installation
# ============

# Use ocp-build to install the lib, bin, and gui
install:
	$(OCP_BUILD) $(OCP_FLAGS) install psmt2-frontend
# --install-bin $(bindir) --install-lib $(libdir) --install-meta $(metadir)

# Use ocp-build to uninstall the lib, bin, and gui
uninstall:
	$(OCP_BUILD) $(OCP_FLAGS) install --uninstall-only psmt2-frontend


# ===================================
# Configuration generation / Autoconf
# ===================================

# The autoconf directory is generated by ocp-autoconf
# regenerating the directory should not be necessary
# except when the project description in
# sources/ocp-autoconf.config is changed
autoconf/configure: ocp-autoconf.config
	ocp-autoconf

# Alias to run the configure step
# The root configure script just cd into autoconf
# and calls the generated configure script (so that
# it doesn't pollute the root with many generated files)
autoconf/Makefile.config: autoconf/configure
	./configure


# ==============
# Cleaning rules
# ==============

# Cleanup generated files
generated-clean:
	rm -rf $(GENERATED)

# Clean ocp-build generated artifacts
ocp-build-clean: _obuild
	$(OCP_BUILD) clean

# Cleanup all ocp-build related files
ocp-build-distclean:
	rm -rf _obuild

# Clean files generated by ocp-autoconf
ocp-autoconf-distclean:
	rm -rf autoconf


# =====
# Tests
# =====
tests: _obuild gen
	$(OCP_BUILD) $(OCP_FLAGS) standalone_minimal
